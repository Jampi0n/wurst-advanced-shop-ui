package ShopFunctionConfig

import initlater ItemInShop
import initlater ShopAPI

/**
Runs when the buy button is clicked.
shopConfig_shopCanBuy should always be used to check if buying is possible
tryBuy should be used to buy the item
Can be used to add custom error/success messages, play sounds, etc.
**/
@configurable public function shopConfig_shopClickBuy(unit u, ItemInShop itm)
    if shopConfig_shopCanBuy(u, itm)
        let boughtItem = tryBuy(u, itm)
        if boughtItem == null
            print("Item could not be bought!")
        else
            print(boughtItem.getName() + " was bought!")

/**
Returns true if the item can be bought.
should check for gold cost
other common conditions are inventory space, hero alive, hero close to shop, ...
**/
@configurable public function shopConfig_shopCanBuy(unit u, ItemInShop itm) returns bool
    let cost = getItemCostForHero(u, itm)
    if u.getOwner().getGold() >= cost
        if u.isAlive() and (hasSpaceForItem(u, itm) or itm.isPowerUp())
            return true
    return false

/**
Runs when the shop is opened by player p.
Common use case is hiding other UI parts like multiboards or timers.
**/
@configurable public function shopConfig_onOpenShop(player _p)
/**
Runs when the sgop is closed by player p.
**/
@configurable public function shopConfig_onCloseShop(player _p)

/**
Sort items within one category.
**/
@configurable public function shopConfig_sortItems(ItemInShop a, ItemInShop b) returns int
    //return a.getSetupOrder() - b.getSetupOrder() sort by setup order
    return a.getTotalCost() - b.getTotalCost() // sort by gold cost

/**
Sort items in the builds into list.
**/
@configurable public function shopConfig_sortBuildsInto(ItemInShop a, ItemInShop b) returns int
    return shopConfig_sortItems(a,b)

/**
Direct parents will always be earlier than transitive parents in the builds into list.
(sorts direct parents and transitive parents individually and puts direct parents first)
**/
@configurable public constant PRIORITIZE_DIRECT_PARENTS = true

public function removeImportNotUsedWarning()
