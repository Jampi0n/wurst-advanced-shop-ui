package ItemConfiguration

import ItemObjEditing
import ItemInShop


int currentItemId
public ItemDefinition currentItemDefinition
public ItemInShop currentItemInShop
bool defaultPageBreak = true

public function setupItem(int itemId, int category, int goldCost)
    if compiletime
        let iDef = getItemDefintion(itemId)
        iDef.setGoldCost(goldCost)
        currentItemDefinition = iDef
    else
        currentItemId = itemId
        currentItemInShop = ItemInShop.retrieveItemFromId(itemId)
        currentItemInShop.setupItem(category, goldCost)
        currentItemInShop.setEnablePageBreak(defaultPageBreak)

public function addRequirement(int itemId)
    if not compiletime
        let child = ItemInShop.retrieveItemFromId(itemId)
        currentItemInShop.addRequirement(child)

public function addRequirements(vararg int itemIds)
    for int itemId in itemIds
        addRequirement(itemId)

public function makePowerUp()
    if not compiletime
        currentItemInShop.makePowerUp()

public function enablePageBreak()
    if not compiletime
        currentItemInShop.setEnablePageBreak(true)
public function disablePageBreak()
    if not compiletime
        currentItemInShop.setEnablePageBreak(false)
public function defaultEnablePageBreak()
    defaultPageBreak = true
public function defaultDisablePageBreak()
    defaultPageBreak = false
